[profile.default]
src = 'src'
out = 'out'
libs = ['lib']
optimizer_runs = 10_000
# the following setting ensures that deterministically deployed contracts will always be to the same address
bytecode_hash = "none"
gas_reports = []
auto_detect_solc = false
solc = "0.8.29"
remappings = [
  "ds-test/=lib/forge-std/lib/ds-test/src/",
  "forge-std/=lib/forge-std/src/",
  # Use lib/osx for all OSx framework contracts
  "@aragon/osx/=lib/osx/packages/contracts/src/",
  # Use ve-governance's osx-commons for ALL commons imports
  # Note: pointing to contracts/ not contracts/src/ because imports already include src/
  "@aragon/osx-commons-contracts/=lib/ve-governance/lib/osx-commons/contracts/",
  "@aragon/commons/=lib/ve-governance/lib/osx-commons/contracts/",
  # Other Aragon plugins
  "@aragon/multisig/=lib/ve-governance/lib/multisig-plugin/packages/contracts/src/",
  # VE Governance components
  "@escrow/=lib/ve-governance/src/escrow/",
  "@curve/=lib/ve-governance/src/curve/",
  "@queue/=lib/ve-governance/src/queue/",
  "@clock/=lib/ve-governance/src/clock/",
  "@lock/=lib/ve-governance/src/lock/",
  "@delegation/=lib/ve-governance/src/delegation/",
  "@voting/=lib/ve-governance/src/voting/",
  "@libs/=lib/ve-governance/src/libs/",
  "@setup/=lib/ve-governance/src/setup/",
  # Token Voting Hats
  "@token-voting-hats/=lib/token-voting-plugin/src/",
  # Capital Distributor (will use ve-governance's osx-commons via @aragon/commons)
  "@capital-distributor/=lib/osx-capital-distributor/src/",
  "@aragon/conditions/=lib/osx-capital-distributor/lib/conditions/src/",
  # Admin Plugin
  "@admin-plugin/=lib/admin-plugin/packages/contracts/src/",
  # OpenZeppelin
  "@openzeppelin/contracts/=lib/token-voting-plugin/lib/openzeppelin-contracts/contracts/",
  "@openzeppelin/contracts-upgradeable/=lib/ve-governance/lib/openzeppelin-contracts-upgradeable/contracts/",
]
# Enable tests to read ir-optimized bytecode precompiled by profile.optimized
fs_permissions = [
  { access = "read", path = "./optimized-out" },
  { access = "read", path = "./lib/osx/packages/artifacts/src/addresses.json" },
  { access = "read", path = "./lib/admin-plugin/packages/artifacts/src/addresses.json" },
  { access = "read", path = "./config/" }
]

# for pre-compiling ir-optimized bytecode that will be later deployed by tests
[profile.optimized]
via_ir = true
out = "optimized-out"
script = "src"
bytecode_hash = "none"
sizes = true
# no need to compile tests with via-ir since they load optimized bytecode directly by default
test = "src"

# for running tests against pre-compiled ir-optimized deployments
[profile.test]
src = "test"

[profile.ci]
fuzz = { runs = 5000 }
invariant = { runs = 1000 }

[profile.lite]
fuzz = { runs = 32 }
invariant = { runs = 10 }
# Speed up compilation and tests during development.
optimizer = false

[fmt]
bracket_spacing = true
int_types = "long"
line_length = 120
multiline_func_header = "attributes_first"
number_underscore = "thousands"
quote_style = "double"
tab_width = 2
wrap_comments = true

[rpc_endpoints]
arbitrum = "https://arbitrum-mainnet.infura.io/v3/${INFURA_KEY}"
base = "https://base-mainnet.infura.io/v3/${INFURA_KEY}"
celo = "https://celo-mainnet.infura.io/v3/${INFURA_KEY}"
gnosis = "${GC_RPC}"
local = "http://localhost:8545"
mainnet = "https://mainnet.infura.io/v3/${INFURA_KEY}"
optimism = "https://optimism-mainnet.infura.io/v3/${INFURA_KEY}"
polygon = "https://polygon-mainnet.infura.io/v3/${INFURA_KEY}"
sepolia = "https://sepolia.infura.io/v3/${INFURA_KEY}"

[etherscan]
arbitrum = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=42161"}
base = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=8453"}
celo = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=42220"}
gnosis = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=100"}
mainnet = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=1"}
optimism = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=10"}
polygon = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=137"}
sepolia = {key = "${ETHERSCAN_KEY}", url = "https://api.etherscan.io/v2/api?chainid=11155111"}

# See more config options https://github.com/foundry-rs/foundry/tree/master/config
